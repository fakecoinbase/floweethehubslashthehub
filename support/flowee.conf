##
## flowee.conf configuration file. Lines beginning with # are comments.
##

# To run hub as a background process, set daemon to 1
#daemon=0

# Specify data directory for the block files.
# This is used to create new files in and must be writable
#datadir=<dir>

# Additional data-dirs can be given which act as a fallback to find
# block files if they have not been found yet.
# Notice that the files in those dirs can be read-only.
# Can be passed multiple times for multiple fallback locations.
# blockdatadir=<dir>


# Set database cache size in megabytes, max 16384. Consider increasing this
# consderably during initial download.
#dbcache=300

# Keep the transaction memory pool below <n> megabytes
#maxmempool=300

# Do not keep transactions in the mempool longer than <n> hours
#mempoolexpiry=73

# Network-related settings:
##########################

# Connect via a SOCKS5 proxy
#proxy=127.0.0.1:9050

# to allow thin-block propagation, set the minimum thin-capable peers we should connect to.
# We will disconnect the oldest peer and continue searching for as long as this number is not
# reached.
#min-thin-peers=3

# Bind to given address and always listen on it. Use [host]:port notation for IPv6
#bind=<addr>

##############################################################
##            Quick Primer on addnode vs connect            ##
##  Let's say for instance you use addnode=4.2.2.4          ##
##  addnode will connect you to and tell you about the      ##
##    nodes connected to 4.2.2.4.  In addition it will tell ##
##    the other nodes connected to it that you exist so     ##
##    they can connect to you.                              ##
##  connect will not do the above when you 'connect' to it. ##
##    It will *only* connect you to 4.2.2.4 and no one else.##
##                                                          ##
##  So if you're behind a firewall, or have other problems  ##
##  finding nodes, add some using 'addnode'.                ##
##                                                          ##
##  If you want to stay private, use 'connect' to only      ##
##  connect to "trusted" nodes.                             ##
##                                                          ##
##  If you run multiple nodes on a LAN, there's no need for ##
##  all of them to open lots of connections.  Instead       ##
##  'connect' them all to one node that is port forwarded   ##
##  and has lots of connections.                            ##
##############################################################

# Use as many addnode= settings as you like to connect to specific peers
#addnode=69.164.218.197
#addnode=10.0.0.2:8333

# Alternatively use as many connect= settings as you like to connect ONLY to specific peers
#connect=69.164.218.197
#connect=10.0.0.1:8333

# Listening mode, enabled by default except when 'connect' is being used
# When enabled (1) this node listens on the default port for incoming p2p connections.
#listen=1

# Maximum number of inbound+outbound connections.
#maxconnections=125

# Run on the test network instead of the real bitcoin network.
#testnet=0

# Run a regression test network
#regtest=0


# API options, used by other Flowee products to connect to the hub
# #####################################################################

# Bind to given interface to listen for API connections. Use [host]:port notation for IPv6.
# This option can be specified multiple times (default: bind to loopback)
#apilisten=127.0.0.1

# Send transactions as zero-fee transactions if possible
#sendfreetransactions=0

# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).
# This setting is over-ridden by the -paytxfee option.
#txconfirmtarget=n

# (Legacy) JSON-RPC options (for controlling a running hub/hub-qt process)
# #####################################################################

# server=1 tells hub-qt and hub to accept JSON-RPC commands
#server=0

# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.
# This option can be specified multiple times (default: bind to all interfaces)
#rpcbind=<addr>

# Location of the RPC auth cookie (defaults to datadir)
#rpccookiefile=<filepath>

# if you don't want to use the cookie file, you can use the rpcauth option.
# This is a Username and hashed password for JSON-RPC connections. The field
# <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical
# python script is included in share/rpcuser. This option can be specified
# multiple times
#rpcauth=<userpw>

# How many seconds hub-cli will wait for a complete RPC HTTP request.
# after the HTTP connection is established.
#rpcclienttimeout=900

# By default, only RPC connections from localhost are allowed.
# Specify as many rpcallowip= settings as you like to allow connections from other hosts,
# either as a single IPv4/IPv6 or with a subnet specification.

# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,
# because the rpcpassword is transmitted over the network unencrypted.

# server=1 tells hub-qt to accept JSON-RPC commands.
# it is also read by hub to determine if RPC should be enabled 
#rpcallowip=10.1.1.34/255.255.255.0
#rpcallowip=1.2.3.4/24
#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96

# Set the number of threads to service RPC calls
#rpcthreads=4

# Listen for RPC connections on this TCP port:
#rpcport=8332

# You can use hub-qt to send commands to hub-qt/hub
# running on another host by changing the default from 'localhost'
#rpcconnect=127.0.0.1

